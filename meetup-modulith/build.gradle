plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id("org.springdoc.openapi-gradle-plugin") version "1.8.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('testContainersVersion', "1.19.8")
	set('camundaVersion', "7.21.0")
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'
//	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'	// LocalDateTime
	implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest'
	implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp' // frontend
	implementation 'org.camunda.bpm:camunda-engine-plugin-spin'
	implementation 'org.camunda.spin:camunda-spin-dataformat-all'

 	implementation 'com.eventstore:db-client-java:5.3.2'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.awaitility:awaitility:4.2.0'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testContainersVersion}"
		mavenBom "org.camunda.bpm:camunda-bom:${camundaVersion}"
	}
}


bootBuildImage {
	imageName = "${project.name}"
	environment = ["BP_JVM_VERSION": "17.*"]
}

//bootRun {
//	systemProperty 'spring.profiles.active', 'demo'
//}

tasks.named('test') {
	useJUnitPlatform()
}
