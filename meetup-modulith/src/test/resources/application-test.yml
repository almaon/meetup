server:
  port: 9001
#  shutdown: graceful
#  tomcat:
#    connection-timeout: 2s
#    keep-alive-timeout: 15s
#    threads:
#      max: 50
#      min-spare: 5
  
esdb:
  connectionstring: ${EVENT_STORE_CONNECTION:esdb://localhost:2113?tls=false}
  
keySetURI: ${OAUTH_JWKS_URL:http://localhost:8080/oauth2/jwks}

#eureka:
#  client:
#    service-url.defaultZone: ${SERVICE_DISCOVERY_URL:http://localhost:8761/eureka}
#  instance.ip-address: localhost
eureka:
  client:
    enabled: false

spring:
  application:
    name: meetup
  lifecycle:
    timeout-per-shutdown-phase: 15s
    
#  config:
#    import: "optional:configserver:"
#   cloud:
#    config:
#      uri: http://localhost:8888
#      request-connect-timeout: 5000 # 5s
#      request-read-timeout: 5000 # 5s
#      fail-fast: false # In production, set to true
#      retry:
#        max-attempts: 6
#        initial-interval: 1000 # 1s
#        max-interval: 2000 # 2s
#        multiplier: 1.1
        
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH_ISSUER_URI:http://localhost:8080}

  datasource:
    url: jdbc:tc:postgresql:15.1:/// 
#  datasource:
#    username: user
#    password: password
#    url: ${VIEW_DB_URL:jdbc:postgresql://localhost:5433/meetup_view}
#    hikari:
#      connection-timeout: 2000 #ms
#      maximum-pool-size: 5 
#  jpa:
#    hibernate:
#      ddl-auto: create-drop
      
# for schema generation
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action: create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target: create.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source: metadata

logging:
#  pattern:
#    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
    org.springframework.security: DEBUG
#    io.github.resilience4j: debug

info:
  system: Meetup Modulith
  
#management:
#  endpoints:
#    web:
#      exposure:
#        include: configprops, env, flyway, health, heapdump, info, loggers, mappings, prometheus
#  endpoint:
#    health:
#      show-details: always
#      show-components: always
#      probes:
#        enabled: true
#  info:
#    env:
#      enabled: true
#    java:
#      enabled: true
#    os:
#      enabled: true
#  metrics:
#    tags:
#      application: ${spring.application.name}
  

  
 
